================================================================================
RAILWAY MYSQL SETUP - SQLite to MySQL Migration Guide
================================================================================

PROBLEM:
--------
Your Flutter app is getting 500 errors because Railway is using SQLite, but
Railway's filesystem is EPHEMERAL (files are deleted on redeploy).

SQLite database file (database/database.sqlite) gets wiped on every deployment!

SOLUTION:
---------
Use MySQL database on Railway (persistent, managed database service).


================================================================================
STEP-BY-STEP FIX
================================================================================

STEP 1: Add MySQL Database to Railway
--------------------------------------
1. Go to Railway Dashboard: https://railway.app/dashboard
2. Open your project: "hair-salon-production"
3. Click the "+ New" button
4. Select "Database" → "Add MySQL"
5. Railway will spin up a MySQL database and auto-generate these variables:
   - MYSQL_URL
   - MYSQLHOST
   - MYSQLPORT  
   - MYSQLDATABASE
   - MYSQLUSER
   - MYSQLPASSWORD


STEP 2: Configure Laravel Service Environment Variables
--------------------------------------------------------
1. In Railway Dashboard, click on your LARAVEL SERVICE (not the database)
2. Go to "Variables" tab
3. Click "Raw Editor" button
4. Add/update these variables:

DB_CONNECTION=mysql
DB_HOST=${MYSQLHOST}
DB_PORT=${MYSQLPORT}
DB_DATABASE=${MYSQLDATABASE}
DB_USERNAME=${MYSQLUSER}
DB_PASSWORD=${MYSQLPASSWORD}

APP_KEY=base64:YOUR_GENERATED_KEY_HERE

Note: Get APP_KEY by running locally:
  php artisan key:generate --show


STEP 3: Run Migrations on Railway
----------------------------------
Option A - Using Railway CLI (Recommended):
  railway login
  railway link
  railway run php artisan migrate --force
  railway run php artisan db:seed --force

Option B - Via Deployment Hook:
  Add to railway.json or nixpacks.toml:
  
  [phases.deploy]
  cmds = [
    "php artisan migrate --force",
    "php artisan db:seed --force"
  ]


STEP 4: Verify Database Connection
-----------------------------------
1. Redeploy your Railway service (it should auto-deploy after variable changes)
2. Test the debug endpoint:
   
   GET https://hair-salon-production.up.railway.app/api/debug/auth-status

   Should return:
   {
     "app_key_set": true,
     "database_connection": "mysql",
     "users_table_exists": true,
     "users_count": 0,
     "sanctum_config": true
   }


STEP 5: Test Flutter App Authentication
----------------------------------------
1. Open your Flutter app
2. Try to register a new user
3. Try to login

Expected Response (201 Created):
{
  "user": {
    "id": 1,
    "name": "Test User",
    "email": "test@example.com",
    "role": "customer",
    "created_at": "2024-..."
  },
  "token": "1|abc123xyz..."
}


================================================================================
ENVIRONMENT VARIABLES CHECKLIST
================================================================================

Required for Laravel + MySQL on Railway:
✅ APP_NAME=LuxeHairStudio
✅ APP_ENV=production
✅ APP_KEY=base64:... (generate with php artisan key:generate --show)
✅ APP_DEBUG=false
✅ APP_URL=https://hair-salon-production.up.railway.app

✅ DB_CONNECTION=mysql
✅ DB_HOST=${MYSQLHOST}
✅ DB_PORT=${MYSQLPORT}
✅ DB_DATABASE=${MYSQLDATABASE}
✅ DB_USERNAME=${MYSQLUSER}
✅ DB_PASSWORD=${MYSQLPASSWORD}

✅ SESSION_DRIVER=cookie (or database if you prefer)
✅ CACHE_DRIVER=file (or redis if available)
✅ QUEUE_CONNECTION=sync


MongoDB Variables (for services/deals):
✅ MONGODB_DSN=your_mongodb_connection_string
✅ MONGODB_DATABASE=luxe_hair_studio


================================================================================
TROUBLESHOOTING
================================================================================

Error: "SQLSTATE[HY000] [2002] Connection refused"
--------------------------------------------------
→ MySQL database not added or not linked
→ Check DB_HOST variable points to ${MYSQLHOST}


Error: "Access denied for user"
--------------------------------
→ DB_USERNAME or DB_PASSWORD incorrect
→ Verify you're using ${MYSQLUSER} and ${MYSQLPASSWORD}


Error: "Base table or view not found: users"
---------------------------------------------
→ Migrations not run on Railway
→ Run: railway run php artisan migrate --force


500 Error still occurring:
--------------------------
→ Check Railway deployment logs:
  Dashboard → Your Service → Deployments → Latest → View Logs
→ Look for PHP errors or database connection failures


================================================================================
QUICK COMMANDS
================================================================================

# Login to Railway CLI
railway login

# Link to your project
railway link

# Run migrations
railway run php artisan migrate --force

# Run seeders
railway run php artisan db:seed --force

# Check database connection
railway run php artisan tinker
>>> DB::connection()->getPdo();

# View logs
railway logs

# Open Railway service in browser
railway open


================================================================================
MONGODB NOTE
================================================================================

Your app uses HYBRID database architecture:
- MySQL/SQLite: Users, Bookings (relational data)
- MongoDB: Services, Deals (document/catalog data)

Make sure BOTH are configured on Railway:
1. MySQL database (for users/bookings) ← THIS GUIDE
2. MongoDB connection string in MONGODB_DSN variable


================================================================================
FINAL CHECKLIST
================================================================================

Before testing Flutter app:
☐ MySQL database added to Railway project
☐ DB_CONNECTION=mysql set in Laravel service variables
☐ All DB_* variables using ${MYSQL*} references
☐ APP_KEY generated and set
☐ Migrations run successfully (railway run php artisan migrate --force)
☐ Debug endpoint shows all SUCCESS/true
☐ Railway service redeployed after variable changes


================================================================================
